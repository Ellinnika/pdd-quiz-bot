from aiogram import Router, F
from aiogram.types import Message
import pandas as pd

router = Router()

try:
    df = pd.read_excel("keywords.xlsx").fillna("")
except Exception as e:
    print(f"[keywords] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ keywords.xlsx: {e}")
    df = pd.DataFrame()

def build_response(row):
    parts = []

    if row.get("–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ"):
        parts.append(f"üßæ *–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:*\n{row['–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ']}")
    if row.get("–ü—Ä–∏–º–µ—Ä—ã"):
        parts.append(f"üîÑ *–ü—Ä–∏–º–µ—Ä—ã:*\n{row['–ü—Ä–∏–º–µ—Ä—ã']}")
    if row.get("–ü—Ä–∞–≤–∏–ª–∞ –ü–î–î"):
        parts.append(f"üìò *–ü—Ä–∞–≤–∏–ª–∞ –ü–î–î:*\n{row['–ü—Ä–∞–≤–∏–ª–∞ –ü–î–î']}")
    if row.get("–ú–æ–∂–Ω–æ"):
        parts.append(f"{row['–ú–æ–∂–Ω–æ']}")
    if row.get("–ù–µ–ª—å–∑—è"):
        parts.append(f"{row['–ù–µ–ª—å–∑—è']}")
    if row.get("–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å"):
        parts.append(f"‚öñÔ∏è *–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å:*\n{row['–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å']}")
    if row.get("–ê–≤—Ç–æ—Ä—Å–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"):
        parts.append(f"üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:*\n{row['–ê–≤—Ç–æ—Ä—Å–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π']}")
    if row.get("–°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã"):
        parts.append(f"üìé [–ú–∞—Ç–µ—Ä–∏–∞–ª—ã]({row['–°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã']})")

    return "\n\n".join(parts)

@router.message(F.text)
async def keyword_lookup(message: Message):
    text = message.text.lower()

    matched = []

    for _, row in df.iterrows():
        keys = [k.strip().lower() for k in row.get("–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞", "").split(",") if k.strip()]
        if any(k in text for k in keys):
            matched.append(row)
        else:
            topics = [t.strip().lower() for t in row.get("–¢–µ–º–∞—Ç–∏–∫–∞", "").split(",") if t.strip()]
            if any(t in text for t in topics):
                matched.append(row)

    if not matched:
        return

    for row in matched[:3]:
        response = build_response(row)
        image = row.get("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (—Å—Å—ã–ª–∫–∞)", "").strip()
        if image.startswith("http"):
            try:
                await message.answer_photo(photo=image, caption=response)
            except:
                await message.answer(response)
        else:
            await message.answer(response)